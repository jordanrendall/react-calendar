{"ast":null,"code":"export const getNumberOfDays = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n  return new Date(year, month, 0).getDate();\n};\nexport const getPrevMonthDays = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n\n  if (month > 1) {\n    return new Date(year, month - 1, 0).getDate();\n  } else {\n    return new Date(year - 1, 12, 0).getDate();\n  }\n};\nexport const getNextMonthDays = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n\n  if (month < 12) {\n    return new Date(year, month + 1, 0).getDate();\n  } else {\n    return new Date(year + 1, 1, 0).getDate();\n  }\n};\nexport const getMonthStructure = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n  const firstOfMonth = new Date(year, month - 1);\n  console.log(numberOfDays);\n  const firstDay = firstOfMonth.getDay();\n  const lastOfMonth = new Date(year, month, 0);\n  const lastDay = lastOfMonth.getDay();\n  const numberOfDays = lastOfMonth.getDate();\n  return {\n    firstDay,\n    lastDay,\n    numberOfDays\n  };\n};\nexport const dayOfWeekAsString = index => {\n  return ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][index];\n};","map":{"version":3,"sources":["/Users/jordanrendall/DevProjects/Github/react-calendar/components/Calendar/calendarFunctions.js"],"names":["getNumberOfDays","year","month","Date","getDate","getPrevMonthDays","getNextMonthDays","getMonthStructure","firstOfMonth","console","log","numberOfDays","firstDay","getDay","lastOfMonth","lastDay","dayOfWeekAsString","index"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9C,MAAIA,KAAK,GAAG,EAAR,IAAc,CAACD,IAAf,IAAuB,CAACC,KAA5B,EAAmC,OAAO,CAAP;AACnC,SAAO,IAAIC,IAAJ,CAASF,IAAT,EAAeC,KAAf,EAAsB,CAAtB,EAAyBE,OAAzB,EAAP;AACD,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAG,CAACJ,IAAD,EAAOC,KAAP,KAAiB;AAC/C,MAAIA,KAAK,GAAG,EAAR,IAAc,CAACD,IAAf,IAAuB,CAACC,KAA5B,EAAmC,OAAO,CAAP;;AACnC,MAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO,IAAIC,IAAJ,CAASF,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0B,CAA1B,EAA6BE,OAA7B,EAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAID,IAAJ,CAASF,IAAI,GAAG,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,EAA0BG,OAA1B,EAAP;AACD;AACF,CAPM;AAQP,OAAO,MAAME,gBAAgB,GAAG,CAACL,IAAD,EAAOC,KAAP,KAAiB;AAC/C,MAAIA,KAAK,GAAG,EAAR,IAAc,CAACD,IAAf,IAAuB,CAACC,KAA5B,EAAmC,OAAO,CAAP;;AACnC,MAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,WAAO,IAAIC,IAAJ,CAASF,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0B,CAA1B,EAA6BE,OAA7B,EAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAID,IAAJ,CAASF,IAAI,GAAG,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBG,OAAzB,EAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMG,iBAAiB,GAAG,CAACN,IAAD,EAAOC,KAAP,KAAiB;AAChD,MAAIA,KAAK,GAAG,EAAR,IAAc,CAACD,IAAf,IAAuB,CAACC,KAA5B,EAAmC,OAAO,CAAP;AACnC,QAAMM,YAAY,GAAG,IAAIL,IAAJ,CAASF,IAAT,EAAeC,KAAK,GAAG,CAAvB,CAArB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACA,QAAMC,QAAQ,GAAGJ,YAAY,CAACK,MAAb,EAAjB;AACA,QAAMC,WAAW,GAAG,IAAIX,IAAJ,CAASF,IAAT,EAAeC,KAAf,EAAsB,CAAtB,CAApB;AACA,QAAMa,OAAO,GAAGD,WAAW,CAACD,MAAZ,EAAhB;AAEA,QAAMF,YAAY,GAAGG,WAAW,CAACV,OAAZ,EAArB;AACA,SAAO;AAAEQ,IAAAA,QAAF;AAAYG,IAAAA,OAAZ;AAAqBJ,IAAAA;AAArB,GAAP;AACD,CAVM;AAYP,OAAO,MAAMK,iBAAiB,GAAGC,KAAK,IAAI;AACxC,SAAO,CACL,QADK,EAEL,SAFK,EAGL,WAHK,EAIL,UAJK,EAKL,QALK,EAML,UANK,EAOL,QAPK,EAQLA,KARK,CAAP;AASD,CAVM","sourcesContent":["export const getNumberOfDays = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n  return new Date(year, month, 0).getDate();\n};\n\nexport const getPrevMonthDays = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n  if (month > 1) {\n    return new Date(year, month - 1, 0).getDate();\n  } else {\n    return new Date(year - 1, 12, 0).getDate();\n  }\n};\nexport const getNextMonthDays = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n  if (month < 12) {\n    return new Date(year, month + 1, 0).getDate();\n  } else {\n    return new Date(year + 1, 1, 0).getDate();\n  }\n};\n\nexport const getMonthStructure = (year, month) => {\n  if (month > 12 || !year || !month) return 0;\n  const firstOfMonth = new Date(year, month - 1);\n  console.log(numberOfDays);\n  const firstDay = firstOfMonth.getDay();\n  const lastOfMonth = new Date(year, month, 0);\n  const lastDay = lastOfMonth.getDay();\n\n  const numberOfDays = lastOfMonth.getDate();\n  return { firstDay, lastDay, numberOfDays };\n};\n\nexport const dayOfWeekAsString = index => {\n  return [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday',\n  ][index];\n};\n"]},"metadata":{},"sourceType":"module"}