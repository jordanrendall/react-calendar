{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jordanrendall/DevProjects/Github/react-calendar/components/Calendar/CalendarWithState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { CalendarContext } from './context/CalendarContext';\nimport { getMonthStructure, getPrevMonthDays } from './calendarFunctions';\nimport LeftArrow from './LeftArrow';\nimport RightArrow from './RightArrow';\nimport Day from './Day';\nimport DayNames from './DayNames';\nimport Title from './Title';\nconst Header = styled.article.withConfig({\n  displayName: \"CalendarWithState__Header\",\n  componentId: \"rf1fs2-0\"\n})([\"grid-column:1/-1;display:grid;grid-template-columns:1fr 4fr 1fr;\"]);\nconst StyledCalendar = styled.article.withConfig({\n  displayName: \"CalendarWithState__StyledCalendar\",\n  componentId: \"rf1fs2-1\"\n})([\"width:75vw;height:70vw;display:grid;grid-template-columns:repeat(7,1fr);grid-template-rows:repeat(7,1fr);.week{border-top:1px solid black;}.week:last-child{border-bottom:1px solid black;border-bottom-left-radius:5px;border-bottom-right-radius:5px;}border-radius:1rem;box-shadow:0 0 1rem silver;padding:1rem;\"]);\n\nconst CalendarWithState = () => {\n  const context = useContext(CalendarContext);\n  const {\n    state: {\n      month,\n      year,\n      firstDay,\n      lastDay,\n      numberOfDays\n    },\n    setState\n  } = context;\n  const {\n    0: isCalendarLoading,\n    1: setIsCalendarloading\n  } = useState(true);\n  const {\n    0: monthArray,\n    1: setMonthArray\n  } = useState([]);\n  useEffect(() => {\n    const result = getMonthStructure(year, month);\n    setState(prevState => _objectSpread({}, prevState, {\n      firstDay: result.firstDay,\n      lastDay: result.lastDay,\n      numberOfDays: result.numberOfDays\n    }));\n    const prevMonth = getPrevMonthDays(year, month);\n\n    let monthNumbers = _Array$from({\n      length: result.numberOfDays\n    }, (v, k) => k + 1);\n\n    if (result.firstDay !== 0) {\n      for (var i = 0; i < result.firstDay; i++) {\n        monthNumbers.unshift(prevMonth - i);\n      }\n    }\n\n    var j = 1;\n\n    for (var i = 35 - result.numberOfDays - result.firstDay; i > 0; i--) {\n      monthNumbers.push(j);\n      j++;\n    }\n\n    setIsCalendarloading(false);\n    setMonthArray(monthNumbers);\n  }, [year, month]);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Calendar\"), !isCalendarLoading && __jsx(React.Fragment, null, __jsx(StyledCalendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(LeftArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(RightArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), __jsx(DayNames, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), monthArray.map((day, i) => {\n    return __jsx(Day, {\n      key: `day-${day}-${i}`,\n      number: day,\n      shaded: i < firstDay || i > numberOfDays + firstDay - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default CalendarWithState;","map":{"version":3,"sources":["/Users/jordanrendall/DevProjects/Github/react-calendar/components/Calendar/CalendarWithState.js"],"names":["React","useState","useEffect","useContext","styled","CalendarContext","getMonthStructure","getPrevMonthDays","LeftArrow","RightArrow","Day","DayNames","Title","Header","article","StyledCalendar","CalendarWithState","context","state","month","year","firstDay","lastDay","numberOfDays","setState","isCalendarLoading","setIsCalendarloading","monthArray","setMonthArray","result","prevState","prevMonth","monthNumbers","length","v","k","i","unshift","j","push","map","day"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { CalendarContext } from './context/CalendarContext';\nimport { getMonthStructure, getPrevMonthDays } from './calendarFunctions';\nimport LeftArrow from './LeftArrow';\nimport RightArrow from './RightArrow';\nimport Day from './Day';\nimport DayNames from './DayNames';\nimport Title from './Title';\n\nconst Header = styled.article`\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: 1fr 4fr 1fr;\n`;\n\nconst StyledCalendar = styled.article`\n  width: 75vw;\n  height: 70vw;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(7, 1fr);\n\n  .week {\n    border-top: 1px solid black;\n  }\n\n  .week:last-child {\n    border-bottom: 1px solid black;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n  border-radius: 1rem;\n  box-shadow: 0 0 1rem silver;\n  padding: 1rem;\n`;\n\nconst CalendarWithState = () => {\n  const context = useContext(CalendarContext);\n  const {\n    state: { month, year, firstDay, lastDay, numberOfDays },\n    setState,\n  } = context;\n  const [isCalendarLoading, setIsCalendarloading] = useState(true);\n  const [monthArray, setMonthArray] = useState([]);\n  useEffect(() => {\n    const result = getMonthStructure(year, month);\n    setState(prevState => ({\n      ...prevState,\n      firstDay: result.firstDay,\n      lastDay: result.lastDay,\n      numberOfDays: result.numberOfDays,\n    }));\n\n    const prevMonth = getPrevMonthDays(year, month);\n    let monthNumbers = Array.from(\n      { length: result.numberOfDays },\n      (v, k) => k + 1\n    );\n    if (result.firstDay !== 0) {\n      for (var i = 0; i < result.firstDay; i++) {\n        monthNumbers.unshift(prevMonth - i);\n      }\n    }\n    var j = 1;\n    for (var i = 35 - result.numberOfDays - result.firstDay; i > 0; i--) {\n      monthNumbers.push(j);\n      j++;\n    }\n    setIsCalendarloading(false);\n    setMonthArray(monthNumbers);\n  }, [year, month]);\n  return (\n    <>\n      <h1>Calendar</h1>\n      {!isCalendarLoading && (\n        <>\n          <StyledCalendar>\n            <Header>\n              <LeftArrow />\n              <Title />\n\n              <RightArrow />\n            </Header>\n            <DayNames />\n            {monthArray.map((day, i) => {\n              return (\n                <Day\n                  key={`day-${day}-${i}`}\n                  number={day}\n                  shaded={i < firstDay || i > numberOfDays + firstDay - 1}\n                />\n              );\n            })}\n          </StyledCalendar>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CalendarWithState;\n"]},"metadata":{},"sourceType":"module"}