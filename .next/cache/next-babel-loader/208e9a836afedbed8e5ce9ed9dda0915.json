{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jordanrendall/DevProjects/Github/react-calendar/components/Calendar/RightArrow.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useContext } from 'react';\nimport { getMonthStructure } from './calendarFunctions';\nimport { CalendarContext } from './context/CalendarContext';\n\nconst RightArrow = () => {\n  const context = useContext(CalendarContext);\n  const {\n    state: {\n      month,\n      year\n    }\n  } = context;\n  return __jsx(\"button\", {\n    onClick: async () => {\n      let newYear, newMonth;\n\n      if (month < 12) {\n        context.setState(prevState => _objectSpread({}, prevState, {\n          month: month + 1\n        }));\n        newYear = year;\n        newMonth = month + 1;\n      } else {\n        context.setState(prevState => _objectSpread({}, prevState, {\n          month: 1,\n          year: year + 1\n        }));\n        newYear = year + 1;\n        newMonth = 1;\n      }\n\n      const monthStructure = getMonthStructure(newYear, newMonth);\n      context.setState(prevState => _objectSpread({}, prevState, {\n        firstDay: monthStructure.firstDay,\n        lastDay: monthStructure.lastDay,\n        numberOfDays: monthStructure.numberOfDays\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, `>`);\n};\n\nexport default RightArrow;","map":{"version":3,"sources":["/Users/jordanrendall/DevProjects/Github/react-calendar/components/Calendar/RightArrow.js"],"names":["useContext","getMonthStructure","CalendarContext","RightArrow","context","state","month","year","newYear","newMonth","setState","prevState","monthStructure","firstDay","lastDay","numberOfDays"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,OAAO,GAAGJ,UAAU,CAACE,eAAD,CAA1B;AACA,QAAM;AACJG,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AADH,MAEFH,OAFJ;AAIA,SACE;AACE,IAAA,OAAO,EAAE,YAAY;AACnB,UAAII,OAAJ,EAAaC,QAAb;;AACA,UAAIH,KAAK,GAAG,EAAZ,EAAgB;AACdF,QAAAA,OAAO,CAACM,QAAR,CAAiBC,SAAS,sBACrBA,SADqB;AAExBL,UAAAA,KAAK,EAAEA,KAAK,GAAG;AAFS,UAA1B;AAIAE,QAAAA,OAAO,GAAGD,IAAV;AACAE,QAAAA,QAAQ,GAAGH,KAAK,GAAG,CAAnB;AACD,OAPD,MAOO;AACLF,QAAAA,OAAO,CAACM,QAAR,CAAiBC,SAAS,sBACrBA,SADqB;AAExBL,UAAAA,KAAK,EAAE,CAFiB;AAGxBC,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAHW,UAA1B;AAMAC,QAAAA,OAAO,GAAGD,IAAI,GAAG,CAAjB;AACAE,QAAAA,QAAQ,GAAG,CAAX;AACD;;AACD,YAAMG,cAAc,GAAGX,iBAAiB,CAACO,OAAD,EAAUC,QAAV,CAAxC;AACAL,MAAAA,OAAO,CAACM,QAAR,CAAiBC,SAAS,sBACrBA,SADqB;AAExBE,QAAAA,QAAQ,EAAED,cAAc,CAACC,QAFD;AAGxBC,QAAAA,OAAO,EAAEF,cAAc,CAACE,OAHA;AAIxBC,QAAAA,YAAY,EAAEH,cAAc,CAACG;AAJL,QAA1B;AAMD,KA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4BG,GA5BH,CADF;AA+BD,CArCD;;AAuCA,eAAeZ,UAAf","sourcesContent":["import { useContext } from 'react';\nimport { getMonthStructure } from './calendarFunctions';\nimport { CalendarContext } from './context/CalendarContext';\n\nconst RightArrow = () => {\n  const context = useContext(CalendarContext);\n  const {\n    state: { month, year },\n  } = context;\n\n  return (\n    <button\n      onClick={async () => {\n        let newYear, newMonth;\n        if (month < 12) {\n          context.setState(prevState => ({\n            ...prevState,\n            month: month + 1,\n          }));\n          newYear = year;\n          newMonth = month + 1;\n        } else {\n          context.setState(prevState => ({\n            ...prevState,\n            month: 1,\n            year: year + 1,\n          }));\n\n          newYear = year + 1;\n          newMonth = 1;\n        }\n        const monthStructure = getMonthStructure(newYear, newMonth);\n        context.setState(prevState => ({\n          ...prevState,\n          firstDay: monthStructure.firstDay,\n          lastDay: monthStructure.lastDay,\n          numberOfDays: monthStructure.numberOfDays,\n        }));\n      }}\n    >{`>`}</button>\n  );\n};\n\nexport default RightArrow;\n"]},"metadata":{},"sourceType":"module"}