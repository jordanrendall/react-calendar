{"version":3,"file":"static/webpack/static/development/pages/index.js.d45aa27f662c7209af90.hot-update.js","sources":["webpack:///./components/Calendar/CalendarWithState.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { CalendarContext } from './context/CalendarContext';\nimport { getMonthStructure, getPrevMonthDays } from './calendarFunctions';\nimport LeftArrow from './LeftArrow';\nimport RightArrow from './RightArrow';\nimport Day from './Day';\nimport DayNames from './DayNames';\nimport Title from './Title';\n\nconst Header = styled.article`\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: 1fr 4fr 1fr;\n`;\n\nconst StyledCalendar = styled.article`\n  width: 55vw;\n  height: 50vw;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(7, 1fr);\n\n  .week {\n    border-top: 1px solid black;\n  }\n\n  .week:last-child {\n    border-bottom: 1px solid black;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n  border-radius: 1rem;\n  box-shadow: 0 0 1rem silver;\n  padding: 1rem;\n`;\n\nconst CalendarWithState = () => {\n  const context = useContext(CalendarContext);\n  const {\n    state: { month, year, firstDay, lastDay, numberOfDays },\n    setState,\n  } = context;\n  const [isCalendarLoading, setIsCalendarloading] = useState(true);\n  const [monthArray, setMonthArray] = useState([]);\n  useEffect(() => {\n    const result = getMonthStructure(year, month);\n    setState(prevState => ({\n      ...prevState,\n      firstDay: result.firstDay,\n      lastDay: result.lastDay,\n      numberOfDays: result.numberOfDays,\n    }));\n\n    const prevMonth = getPrevMonthDays(year, month);\n    let monthNumbers = Array.from(\n      { length: result.numberOfDays },\n      (v, k) => k + 1\n    );\n    if (result.firstDay !== 0) {\n      for (var i = 0; i < result.firstDay; i++) {\n        monthNumbers.unshift(prevMonth - i);\n      }\n    }\n    var j = 1;\n    for (var i = 35 - result.numberOfDays - result.firstDay; i > 0; i--) {\n      monthNumbers.push(j);\n      j++;\n    }\n    setIsCalendarloading(false);\n    setMonthArray(monthNumbers);\n  }, [year, month]);\n  return (\n    <>\n      <h1>React Calendar</h1>\n      {!isCalendarLoading && (\n        <>\n          <StyledCalendar>\n            <Header>\n              <LeftArrow />\n              <Title />\n\n              <RightArrow />\n            </Header>\n            <DayNames />\n            {monthArray.map((day, i) => {\n              return (\n                <Day\n                  key={`day-${day}-${i}`}\n                  number={day}\n                  shaded={i < firstDay || i > numberOfDays + firstDay - 1}\n                />\n              );\n            })}\n          </StyledCalendar>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CalendarWithState;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAMA;AACA;AACA;;;;A","sourceRoot":""}